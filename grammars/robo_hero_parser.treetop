grammar RoboHero
  rule rules_data
    attack_elements:attack* keyword_abilities_elements:keyword_ability* activated_ability_elements:activated_ability* {
      def attacks
        attack_elements.elements
      end

      def activated_abilities
        activated_ability_elements.elements
      end

      def keyword_abilities
        keyword_abilities_elements.elemens
      end
    }
  end

  rule keyword_ability
    "[" keyword params:(" " keyword_param:([0-9] ([a-zA-Z0-9_])*))* "]"
  end

  rule keyword
    "Armor Piercing" /
    [a-zA-Z]+
  end

  rule attack
    "[Attack " costs ": " damage "]" {
      def cost_array
        costs.cost_array
      end

      def damage_array
        [[damage.damage_type.text_value + "_damage", damage.damage_value.text_value.to_i]]
      end
    }
  end

  rule damage
    damage_value:([1-9]+ [0-9]*) damage_type:[A-Z]
  end

  rule activated_ability
    costs ": " effect {
      def cost_array
        costs.cost_array
      end
    }
  end

  rule costs
    cost_element* {
      def cost_array
        elements.map do |element|
          element.cost
        end
      end
    }
  end

  rule cost_element
    '(' (energy_cost / cooldown_cost) ')' {
      def cost
        elements[1].cost
      end
    }
  end

  rule energy_cost
    cost_amount:([0-9]+) ('EN' / 'E') {
      def cost
        [ 'energy', cost_amount.text_value.to_i ]
      end
    }
  end

  rule cooldown_cost
    cost_amount:([0-9]+) 'C' {
      def cost
        [ 'cooldown', cost_amount.text_value.to_i ]
      end
    }
  end

  rule effect
    [a-zA-Z0-9_+ \.]+
  end
end
